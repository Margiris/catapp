{"version":3,"sources":["components/LoginModal.js","components/TopMenu.js","components/CommentList.js","components/Post.js","components/PostList.js","components/PostWithComments.js","components/UserList.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["LoginModal","props","close_login","setState","open_login","close_signup","open_signup","state","username","password","email","loggedIn","badCredentials","this","localStorage","getItem","length","Menu","position","Item","header","Modal","open","size","onClose","trigger","Label","as","content","icon","color","onClick","Header","style","textAlign","width","height","viewBox","marginRight","fill","d","Content","Form","Segment","stacked","Message","hidden","negative","Input","fluid","iconPosition","placeholder","value","onChange","e","target","type","Button","labelPosition","primary","fetch","method","headers","Authorization","btoa","then","r","ok","json","console","log","setItem","token","body","JSON","stringify","name","a","async","_","React","Component","TopMenu","toggleSidenav","sidebar_visible","document","getElementById","left","handleNavigation","location","activeItem","pathname","includes","post_id","slice","handleItemClick","history","push","setVisible","v","visible","unlisten","listen","top","offsetHeight","Dimmer","page","active","onClickOutside","zIndex","vertical","id","className","backgroundColor","Icon","minWidth","action","href","fixed","pointing","secondary","inverted","Container","paddingTop","paddingBottom","marginLeft","CommentForm","postRef","parent","commentBody","url","reply","TextArea","disabled","currentTarget","resp","comments","concat","comment","prevState","post","comment_count","CommentList","response","data","Comment","Group","dividing","map","key","Author","author","Metadata","posted_time","rating","Text","Post","undefined","Card","to","title","Image","src","ui","Meta","posted_on","extra","PostList","posts","Loader","inline","PostWithComments","match","params","Object","UserList","Footer","margin","padding","List","relaxed","divided","link","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38a62612.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Modal,\r\n    Button,\r\n    Form,\r\n    Segment,\r\n    Message,\r\n    Label,\r\n    Menu\r\n} from \"semantic-ui-react\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            open_login: false,\r\n            open_signup: false,\r\n            loggedIn: false,\r\n            badCredentials: false\r\n        };\r\n    }\r\n\r\n    close_login = () => this.setState({ open_login: false });\r\n    open_login = () => this.setState({ open_login: true });\r\n\r\n    close_signup = () => this.setState({ open_signup: false });\r\n    open_signup = () => this.setState({ open_signup: true });\r\n\r\n    render() {\r\n        const { open_login, open_signup } = this.state;\r\n\r\n        if (\r\n            localStorage.getItem(\"jwtToken\") === null ||\r\n            localStorage.getItem(\"jwtToken\").length !== 172\r\n        ) {\r\n            return (\r\n                <Menu.Menu position=\"right\">\r\n                    <Menu.Item header>\r\n                        <Modal\r\n                            open={open_login}\r\n                            size=\"mini\"\r\n                            onClose={this.close_login}\r\n                            trigger={\r\n                                <Label\r\n                                    as=\"a\"\r\n                                    content=\"Login\"\r\n                                    icon=\"sign-in\"\r\n                                    color=\"blue\"\r\n                                    onClick={this.open_login}\r\n                                />\r\n                            }\r\n                        >\r\n                            <Modal.Header\r\n                                as=\"h2\"\r\n                                style={{ textAlign: \"center\" }}\r\n                            >\r\n                                <svg\r\n                                    // className=\"image\"\r\n                                    width=\"40\"\r\n                                    height=\"40\"\r\n                                    viewBox=\"0 0 228.118 228.118\"\r\n                                    style={{\r\n                                        // paddingTop: \"2px\",\r\n                                        // paddingBottom: \"2px\",\r\n                                        marginRight: \"0.5em\",\r\n                                        // marginTop: \"0\",\r\n                                        fill: \"black\"\r\n                                    }}\r\n                                >\r\n                                    <path\r\n                                        d=\"M228.118,12.703l-68.674,13.147c-13.634-6.954-29.059-10.88-45.385-10.88c-16.326,0-31.751,3.926-45.385,10.88L0,12.703\r\n\tl15.658,83.45c-1.191,6.167-1.822,12.531-1.822,19.04c0,55.263,44.96,100.223,100.223,100.223\r\n\tc55.264,0,100.224-44.96,100.224-100.223c0-6.509-0.631-12.873-1.822-19.04L228.118,12.703z M134.029,175.022\r\n\tc-7.911,0-15.038-3.259-19.977-8.675c-4.939,5.42-12.059,8.72-19.961,8.72c-14.878,0-26.982-12.362-26.982-27.362h15\r\n\tc0,7,5.375,12.362,11.982,12.362c6.606,0,11.981-5.095,11.981-11.701l-0.107-10.694c-8.808-3.291-15.097-11.967-15.097-21.967h15\r\n\tc0,5,3.674,8.19,8.19,8.19s8.191-3.19,8.191-8.19h15c0,10-6.288,18.674-15.096,21.966l-0.107,10.651\r\n\tc0,6.53,5.375,11.68,11.981,11.68s11.981-5.297,11.981-12.297h15C161.01,162.705,148.907,175.022,134.029,175.022z\"\r\n                                    />\r\n                                </svg>\r\n                                Login to CatPic\r\n                            </Modal.Header>\r\n                            <Modal.Content>\r\n                                <Form size=\"large\">\r\n                                    <Segment stacked>\r\n                                        <Message\r\n                                            hidden={!this.state.badCredentials}\r\n                                            negative\r\n                                        >\r\n                                            Wrong username or password\r\n                                        </Message>\r\n                                        <Form.Input\r\n                                            fluid\r\n                                            icon=\"user\"\r\n                                            iconPosition=\"left\"\r\n                                            placeholder=\"Username\"\r\n                                            value={this.state.username}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    username: e.target.value\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        <Form.Input\r\n                                            fluid\r\n                                            icon=\"lock\"\r\n                                            iconPosition=\"left\"\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            value={this.state.password}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    password: e.target.value\r\n                                                });\r\n                                            }}\r\n                                        />\r\n\r\n                                        <Button\r\n                                            content=\"Login\"\r\n                                            labelPosition=\"left\"\r\n                                            icon=\"sign-in\"\r\n                                            primary\r\n                                            fluid\r\n                                            size=\"tiny\"\r\n                                            onClick={() => {\r\n                                                const {\r\n                                                    username,\r\n                                                    password\r\n                                                } = this.state;\r\n\r\n                                                fetch(\r\n                                                    \"http://api.catpic.margiris.site:5000/login\",\r\n                                                    {\r\n                                                        method: \"GET\",\r\n                                                        headers: {\r\n                                                            Authorization:\r\n                                                                \"Basic \" +\r\n                                                                btoa(\r\n                                                                    username +\r\n                                                                        \":\" +\r\n                                                                        password\r\n                                                                )\r\n                                                        }\r\n                                                    }\r\n                                                ).then(r => {\r\n                                                    if (r.ok) {\r\n                                                        r.json().then(d => {\r\n                                                            console.log(d);\r\n                                                            localStorage.setItem(\r\n                                                                \"jwtToken\",\r\n                                                                d.token\r\n                                                            );\r\n                                                            this.setState({\r\n                                                                loggedIn: true,\r\n                                                                badCredentials: false\r\n                                                            });\r\n                                                            this.close_login();\r\n                                                        });\r\n                                                    } else {\r\n                                                        this.setState({\r\n                                                            badCredentials: true\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Segment>\r\n                                </Form>\r\n                            </Modal.Content>\r\n                        </Modal>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item header>\r\n                        <Modal\r\n                            open={open_signup}\r\n                            size=\"mini\"\r\n                            onClose={this.close_signup}\r\n                            trigger={\r\n                                <Label\r\n                                    as=\"a\"\r\n                                    content=\"Sign Up\"\r\n                                    icon=\"signup\"\r\n                                    // color=\"blue\"\r\n                                    onClick={this.open_signup}\r\n                                />\r\n                            }\r\n                        >\r\n                            <Modal.Header\r\n                                as=\"h2\"\r\n                                style={{ textAlign: \"center\" }}\r\n                            >\r\n                                <svg\r\n                                    // className=\"image\"\r\n                                    width=\"40\"\r\n                                    height=\"40\"\r\n                                    viewBox=\"0 0 228.118 228.118\"\r\n                                    style={{\r\n                                        // paddingTop: \"2px\",\r\n                                        // paddingBottom: \"2px\",\r\n                                        marginRight: \"0.5em\",\r\n                                        // marginTop: \"0\",\r\n                                        fill: \"black\"\r\n                                    }}\r\n                                >\r\n                                    <path\r\n                                        d=\"M228.118,12.703l-68.674,13.147c-13.634-6.954-29.059-10.88-45.385-10.88c-16.326,0-31.751,3.926-45.385,10.88L0,12.703\r\n\tl15.658,83.45c-1.191,6.167-1.822,12.531-1.822,19.04c0,55.263,44.96,100.223,100.223,100.223\r\n\tc55.264,0,100.224-44.96,100.224-100.223c0-6.509-0.631-12.873-1.822-19.04L228.118,12.703z M134.029,175.022\r\n\tc-7.911,0-15.038-3.259-19.977-8.675c-4.939,5.42-12.059,8.72-19.961,8.72c-14.878,0-26.982-12.362-26.982-27.362h15\r\n\tc0,7,5.375,12.362,11.982,12.362c6.606,0,11.981-5.095,11.981-11.701l-0.107-10.694c-8.808-3.291-15.097-11.967-15.097-21.967h15\r\n\tc0,5,3.674,8.19,8.19,8.19s8.191-3.19,8.191-8.19h15c0,10-6.288,18.674-15.096,21.966l-0.107,10.651\r\n\tc0,6.53,5.375,11.68,11.981,11.68s11.981-5.297,11.981-12.297h15C161.01,162.705,148.907,175.022,134.029,175.022z\"\r\n                                    />\r\n                                </svg>\r\n                                Login to CatPic\r\n                            </Modal.Header>\r\n                            <Modal.Content>\r\n                                <Form size=\"large\">\r\n                                    <Segment stacked>\r\n                                        <Message\r\n                                            hidden={!this.state.badCredentials}\r\n                                            negative\r\n                                        >\r\n                                            Email or username already in use\r\n                                        </Message>\r\n                                        <Form.Input\r\n                                            fluid\r\n                                            icon=\"user\"\r\n                                            iconPosition=\"left\"\r\n                                            placeholder=\"Username\"\r\n                                            value={this.state.username}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    username: e.target.value\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        <Form.Input\r\n                                            fluid\r\n                                            icon=\"at\"\r\n                                            iconPosition=\"left\"\r\n                                            placeholder=\"someone@example.com\"\r\n                                            type=\"email\"\r\n                                            value={this.state.email}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    email: e.target.value\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        <Form.Input\r\n                                            fluid\r\n                                            icon=\"lock\"\r\n                                            iconPosition=\"left\"\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            value={this.state.password}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    password: e.target.value\r\n                                                });\r\n                                            }}\r\n                                        />\r\n\r\n                                        <Button\r\n                                            content=\"Sign Up\"\r\n                                            labelPosition=\"left\"\r\n                                            icon=\"signup\"\r\n                                            primary\r\n                                            fluid\r\n                                            size=\"tiny\"\r\n                                            onClick={() => {\r\n                                                const {\r\n                                                    username,\r\n                                                    password,\r\n                                                    email\r\n                                                } = this.state;\r\n\r\n                                                fetch(\r\n                                                    \"http://api.catpic.margiris.site:5000/user\",\r\n                                                    {\r\n                                                        method: \"POST\",\r\n                                                        headers: {\r\n                                                            \"Content-Type\":\r\n                                                                \"application/json\"\r\n                                                        },\r\n                                                        body: JSON.stringify({\r\n                                                            name: username,\r\n                                                            email: email,\r\n                                                            password: password\r\n                                                        })\r\n                                                    }\r\n                                                ).then(r => {\r\n                                                    if (r.ok) {\r\n                                                        fetch(\r\n                                                            \"http://api.catpic.margiris.site:5000/login\",\r\n                                                            {\r\n                                                                method: \"GET\",\r\n                                                                headers: {\r\n                                                                    Authorization:\r\n                                                                        \"Basic \" +\r\n                                                                        btoa(\r\n                                                                            username +\r\n                                                                                \":\" +\r\n                                                                                password\r\n                                                                        )\r\n                                                                }\r\n                                                            }\r\n                                                        ).then(r => {\r\n                                                            if (r.ok) {\r\n                                                                r.json().then(\r\n                                                                    d => {\r\n                                                                        console.log(\r\n                                                                            d\r\n                                                                        );\r\n                                                                        localStorage.setItem(\r\n                                                                            \"jwtToken\",\r\n                                                                            d.token\r\n                                                                        );\r\n                                                                        this.setState(\r\n                                                                            {\r\n                                                                                loggedIn: true,\r\n                                                                                badCredentials: false\r\n                                                                            }\r\n                                                                        );\r\n                                                                        this.close_signup();\r\n                                                                    }\r\n                                                                );\r\n                                                            } else {\r\n                                                                this.setState({\r\n                                                                    badCredentials: true\r\n                                                                });\r\n                                                            }\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Segment>\r\n                                </Form>\r\n                            </Modal.Content>\r\n                        </Modal>\r\n                    </Menu.Item>\r\n                </Menu.Menu>\r\n            );\r\n        } else {\r\n            return (\r\n                <Menu.Menu position=\"right\">\r\n                    <Menu.Item header>\r\n                        <Label\r\n                            as=\"a\"\r\n                            content=\"Logout\"\r\n                            icon=\"sign-out\"\r\n                            color=\"red\"\r\n                            onClick={async () => {\r\n                                await fetch(\r\n                                    \"http://api.catpic.margiris.site:5000/logout\",\r\n                                    {\r\n                                        method: \"GET\",\r\n                                        headers: {\r\n                                            Authorization:\r\n                                                \"Bearer \" +\r\n                                                localStorage.getItem(\"jwtToken\")\r\n                                        }\r\n                                    }\r\n                                ).then(_ => {\r\n                                    localStorage.setItem(\"jwtToken\", \"\");\r\n                                });\r\n                                this.setState({ loggedIn: false });\r\n                            }}\r\n                        />\r\n                    </Menu.Item>\r\n                </Menu.Menu>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Icon,\r\n    Menu,\r\n    Container,\r\n    Input,\r\n    Button,\r\n    Dimmer\r\n} from \"semantic-ui-react\";\r\nimport LoginModal from \"./LoginModal\";\r\n\r\nexport default class TopMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sidebar_visible: true,\r\n            activeItem: \"\",\r\n            visible: false,\r\n            post_id: \"\"\r\n        };\r\n        this.handleNavigation(this.props.location);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unlisten = this.props.history.listen((location, _) => {\r\n            this.handleNavigation(location);\r\n        });\r\n        document.getElementById(\"mySidenav\").style.top =\r\n            document.getElementById(\"topBar\").offsetHeight + \"px\";\r\n\r\n        this.toggleSidenav();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    toggleSidenav = () => {\r\n        const { sidebar_visible } = this.state;\r\n\r\n        document.getElementById(\"mySidenav\").style.left = sidebar_visible\r\n            ? \"-60vw\"\r\n            : \"0\";\r\n        this.setState({ sidebar_visible: !sidebar_visible });\r\n    };\r\n\r\n    handleNavigation = location => {\r\n        this.state.activeItem = location.pathname.includes(\"post\")\r\n            ? \"post\"\r\n            : \"home\";\r\n        this.state.post_id = location.pathname.slice(6);\r\n    };\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name });\r\n\r\n        if (name === \"post\" && this.state.post_id.length === 24) {\r\n            this.props.history.push(\"/post/\" + this.state.post_id);\r\n        } else if (name === \"home\") {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    setVisible = v => this.setState({ visible: v });\r\n\r\n    render() {\r\n        const { activeItem, post_id, sidebar_visible } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Dimmer\r\n                    page\r\n                    active={sidebar_visible}\r\n                    onClickOutside={this.toggleSidenav}\r\n                    style={{ zIndex: 8 }}\r\n                />\r\n                <Menu\r\n                    // fixed=\"left\"\r\n                    // icon=\"labeled\"\r\n                    // secondary\r\n                    vertical\r\n                    id=\"mySidenav\"\r\n                    className=\"sidenav\"\r\n                    size=\"massive\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                >\r\n                    <Menu.Item\r\n                        name=\"home\"\r\n                        active={activeItem === \"home\"}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        <Icon name=\"home\" />\r\n                        Home\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        name=\"user\"\r\n                        active={activeItem === \"user\"}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        <Icon name=\"user\" />\r\n                        My Profile\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        name=\"post\"\r\n                        active={activeItem === \"post\"}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        <Icon name=\"list\" />\r\n                        Post\r\n                    </Menu.Item>\r\n                    <Menu.Item style={{ minWidth: \"2em\" }}>\r\n                        <Input\r\n                            fluid\r\n                            action\r\n                            size=\"tiny\"\r\n                            value={post_id}\r\n                            placeholder=\"<post_id>\"\r\n                            onChange={e => {\r\n                                this.setState({\r\n                                    post_id: e.target.value\r\n                                });\r\n                            }}\r\n                        >\r\n                            <input />\r\n                            <Button\r\n                                as=\"a\"\r\n                                href={\"/post/\" + this.state.post_id}\r\n                                name=\"post\"\r\n                                size=\"mini\"\r\n                                type=\"submit\"\r\n                                onClick={this.handleItemClick}\r\n                            >\r\n                                <Icon name=\"chevron circle right\" />\r\n                            </Button>\r\n                        </Input>\r\n                    </Menu.Item>\r\n                </Menu>\r\n\r\n                <Menu\r\n                    fixed=\"top\"\r\n                    pointing\r\n                    secondary\r\n                    inverted\r\n                    style={{ backgroundColor: \"#1b1c1d\" }}\r\n                >\r\n                    <Container id=\"topBar\">\r\n                        <Menu.Item\r\n                            header\r\n                            style={{\r\n                                paddingTop: \"2px\",\r\n                                paddingBottom: \"2px\"\r\n                            }}\r\n                        >\r\n                            <Icon\r\n                                name={sidebar_visible ? \"close\" : \"bars\"}\r\n                                className=\"bars\"\r\n                                onClick={this.toggleSidenav}\r\n                            />\r\n                            <svg\r\n                                width=\"29\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 228.118 228.118\"\r\n                                style={{ marginRight: \"0.5em\" }}\r\n                            >\r\n                                <path\r\n                                    d=\"M228.118,12.703l-68.674,13.147c-13.634-6.954-29.059-10.88-45.385-10.88c-16.326,0-31.751,3.926-45.385,10.88L0,12.703\r\n\tl15.658,83.45c-1.191,6.167-1.822,12.531-1.822,19.04c0,55.263,44.96,100.223,100.223,100.223\r\n\tc55.264,0,100.224-44.96,100.224-100.223c0-6.509-0.631-12.873-1.822-19.04L228.118,12.703z M134.029,175.022\r\n\tc-7.911,0-15.038-3.259-19.977-8.675c-4.939,5.42-12.059,8.72-19.961,8.72c-14.878,0-26.982-12.362-26.982-27.362h15\r\n\tc0,7,5.375,12.362,11.982,12.362c6.606,0,11.981-5.095,11.981-11.701l-0.107-10.694c-8.808-3.291-15.097-11.967-15.097-21.967h15\r\n\tc0,5,3.674,8.19,8.19,8.19s8.191-3.19,8.191-8.19h15c0,10-6.288,18.674-15.096,21.966l-0.107,10.651\r\n\tc0,6.53,5.375,11.68,11.981,11.68s11.981-5.297,11.981-12.297h15C161.01,162.705,148.907,175.022,134.029,175.022z\"\r\n                                />\r\n                            </svg>\r\n                            CatPic\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            name=\"home\"\r\n                            active={activeItem === \"home\"}\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                            <Icon name=\"home\" />\r\n                            Home\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            name=\"user\"\r\n                            active={activeItem === \"user\"}\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                            <Icon name=\"user\" />\r\n                            My Profile\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            name=\"post\"\r\n                            active={activeItem === \"post\"}\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                            <Icon name=\"list\" />\r\n                            Post\r\n                        </Menu.Item>\r\n                        <Menu.Item style={{ minWidth: \"15em\" }}>\r\n                            <Input\r\n                                fluid\r\n                                action\r\n                                size=\"mini\"\r\n                                inverted\r\n                                value={post_id}\r\n                                placeholder=\"<post_id>\"\r\n                                style={{ marginLeft: \"1.5em\" }}\r\n                                onChange={e => {\r\n                                    this.setState({\r\n                                        post_id: e.target.value\r\n                                    });\r\n                                }}\r\n                            >\r\n                                <input />\r\n                                <Button\r\n                                    as=\"a\"\r\n                                    href={\"/post/\" + this.state.post_id}\r\n                                    name=\"post\"\r\n                                    size=\"mini\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.handleItemClick}\r\n                                >\r\n                                    <Icon name=\"chevron circle right\" />\r\n                                </Button>\r\n                            </Input>\r\n                        </Menu.Item>\r\n                        <LoginModal />\r\n                    </Container>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Comment, Header, Form, Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postRef: props.postRef,\r\n            parent: props.parent,\r\n            commentBody: \"\",\r\n            loggedIn:\r\n                localStorage.getItem(\"jwtToken\") !== null &&\r\n                localStorage.getItem(\"jwtToken\").length === 172,\r\n            url: props.url\r\n        };\r\n    }\r\n    render() {\r\n        const { url, commentBody, loggedIn, parent, postRef } = this.state;\r\n\r\n        return (\r\n            <Form reply>\r\n                <Form.TextArea\r\n                    disabled={!loggedIn}\r\n                    value={commentBody}\r\n                    onChange={e => {\r\n                        this.setState({ commentBody: e.currentTarget.value });\r\n                    }}\r\n                />\r\n                <Button\r\n                    disabled={!loggedIn}\r\n                    content=\"Post Comment\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"edit\"\r\n                    primary\r\n                    onClick={async () => {\r\n                        const r = await fetch(url, {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                Authorization:\r\n                                    \"Bearer \" +\r\n                                    localStorage.getItem(\"jwtToken\"),\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify({ body: commentBody })\r\n                        });\r\n                        if (r.ok) {\r\n                            this.setState({ commentBody: \"\" });\r\n\r\n                            const resp = await r.json();\r\n                            parent.setState({\r\n                                comments: parent.state.comments.concat(\r\n                                    resp.comment\r\n                                )\r\n                            });\r\n\r\n                            postRef.setState(prevState => ({\r\n                                post: {\r\n                                    ...prevState.post,\r\n                                    comment_count:\r\n                                        postRef.state.post.comment_count + 1\r\n                                }\r\n                            }));\r\n                        } else {\r\n                            console.log(r);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class CommentList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post_id: props.post_id,\r\n            postRef: props.parent,\r\n            commentBody: \"\",\r\n            comments: [],\r\n            url:\r\n                \"http://api.catpic.margiris.site:5000/post/\" +\r\n                props.post_id +\r\n                \"/comment\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.state.url).then(response =>\r\n            response.json().then(data => {\r\n                this.setState({ comments: data.comments });\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { comments } = this.state;\r\n\r\n        return (\r\n            <Comment.Group>\r\n                <Header as=\"h3\" dividing>\r\n                    Comments\r\n                </Header>\r\n                {comments.map(comment => {\r\n                    return (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Content>\r\n                                <Comment.Author>\r\n                                    {comment.author}\r\n                                </Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{comment.posted_time}</div>\r\n                                    <div>\r\n                                        <Icon name=\"heart\" />\r\n                                        {comment.rating}\r\n                                    </div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                            <Button icon=\"close\" className=\"del\" />\r\n                        </Comment>\r\n                    );\r\n                })}\r\n                <CommentForm\r\n                    parent={this}\r\n                    postRef={this.state.postRef}\r\n                    url={this.state.url}\r\n                />\r\n            </Comment.Group>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Image, Card, Icon, Modal } from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport CommentList from \"./CommentList\";\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            parent: props.parent,\r\n            post: props.post\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { post, parent } = this.state;\r\n        var comment_count =\r\n            parent === undefined\r\n                ? post.comment_count\r\n                : parent.state.post.comment_count;\r\n        // var datetime_difference = Date.now() - new Date(post.posted_on);\r\n\r\n        return (\r\n            <Card fluid className=\"Card\">\r\n                <Card.Content>\r\n                    <Card.Header>\r\n                        <NavLink to={\"/post/\" + post.id} className=\"a\">\r\n                            {post.title}\r\n                        </NavLink>\r\n                    </Card.Header>\r\n                </Card.Content>\r\n                <Image\r\n                    src=\"http://hdqwalls.com/wallpapers/cat-green-eyes-4k-i8.jpg\"\r\n                    href={\"/post/\" + post.id}\r\n                    ui={false}\r\n                />\r\n                <Card.Content>\r\n                    <Card.Meta>\r\n                        <span className=\"time\">\r\n                            <NavLink to={\"/user/\" + post.author} className=\"a\">\r\n                                {post.author}\r\n                            </NavLink>\r\n                            {\" · \"}\r\n                            {post.posted_on}\r\n                        </span>\r\n                    </Card.Meta>\r\n                </Card.Content>\r\n                <Modal\r\n                    trigger={\r\n                        <Card.Content extra>\r\n                            <NavLink to=\"#\">\r\n                                <Icon name=\"comments\" />\r\n                                {comment_count} comment\r\n                                {comment_count === 1 ? \"\" : \"s\"}\r\n                            </NavLink>\r\n                        </Card.Content>\r\n                    }\r\n                >\r\n                    <Modal.Content>\r\n                        <Post parent={this} post={post} />\r\n                        <CommentList parent={this} post_id={post.id} />\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Container, Loader } from \"semantic-ui-react\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nclass PostList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unlisten = this.props.history.listen((location, _) => {\r\n            this.setState({ state: this.state });\r\n        });\r\n\r\n        const url = \"http://api.catpic.margiris.site:5000/post\";\r\n\r\n        fetch(url).then(response =>\r\n            response.json().then(data => {\r\n                this.setState({ posts: data.posts });\r\n            })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    render() {\r\n        const { posts } = this.state;\r\n\r\n        return (\r\n            <Container className=\"main-container\">\r\n                <Loader inline=\"centered\" active={posts === []} />\r\n                {posts.map(post => {\r\n                    return <Post key={post.id} post={post} />;\r\n                })}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nimport Post from \"./Post\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nclass PostWithComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post_id: this.props.match.params.post_id,\r\n            post: Object()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unlisten = this.props.history.listen((location, _) => {\r\n            this.setState({ post_id: location.pathname.slice(6) });\r\n            this.fetch();\r\n        });\r\n\r\n        this.fetch();\r\n    }\r\n\r\n    fetch() {\r\n        const url =\r\n            \"http://api.catpic.margiris.site:5000/post/\" + this.state.post_id;\r\n\r\n        fetch(url).then(response =>\r\n            response.json().then(data => {\r\n                this.setState({ post: data.post });\r\n            })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    render() {\r\n        const { post, post_id } = this.state;\r\n        console.log(post);\r\n\r\n        return (\r\n            <Container className=\"main-container\">\r\n                <Post post={post} />\r\n                <CommentList post_id={post_id} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostWithComments;\r\n","import React from \"react\";\r\n\r\nexport default class UserList extends React.Component {\r\n    render() {\r\n        return <div>test</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Icon, Container, List, Segment } from \"semantic-ui-react\";\r\n\r\nexport const Footer = () => (\r\n    <Segment\r\n        inverted\r\n        vertical\r\n        style={{ margin: \"3.5em 0em 0em\", padding: \"1.5em 0em\" }}\r\n    >\r\n        <Container textAlign=\"center\">\r\n            <Container>\r\n                <svg\r\n                    width=\"100\"\r\n                    height=\"100\"\r\n                    viewBox=\"0 0 228.118 228.118\"\r\n                    style={{ marginRight: \"0.5em\" }}\r\n                >\r\n                    <path\r\n                        d=\"M228.118,12.703l-68.674,13.147c-13.634-6.954-29.059-10.88-45.385-10.88c-16.326,0-31.751,3.926-45.385,10.88L0,12.703\r\n\tl15.658,83.45c-1.191,6.167-1.822,12.531-1.822,19.04c0,55.263,44.96,100.223,100.223,100.223\r\n\tc55.264,0,100.224-44.96,100.224-100.223c0-6.509-0.631-12.873-1.822-19.04L228.118,12.703z M134.029,175.022\r\n\tc-7.911,0-15.038-3.259-19.977-8.675c-4.939,5.42-12.059,8.72-19.961,8.72c-14.878,0-26.982-12.362-26.982-27.362h15\r\n\tc0,7,5.375,12.362,11.982,12.362c6.606,0,11.981-5.095,11.981-11.701l-0.107-10.694c-8.808-3.291-15.097-11.967-15.097-21.967h15\r\n\tc0,5,3.674,8.19,8.19,8.19s8.191-3.19,8.191-8.19h15c0,10-6.288,18.674-15.096,21.966l-0.107,10.651\r\n\tc0,6.53,5.375,11.68,11.981,11.68s11.981-5.297,11.981-12.297h15C161.01,162.705,148.907,175.022,134.029,175.022z\"\r\n                    />\r\n                </svg>\r\n            </Container>\r\n            <List\r\n                relaxed\r\n                inverted\r\n                divided\r\n                link\r\n                size=\"small\"\r\n                className=\"different-font\"\r\n            >\r\n                <List.Item>\r\n                    Icon made by{\" \"}\r\n                    <a\r\n                        href=\"https://www.flaticon.com/authors/freepik\"\r\n                        title=\"Freepik\"\r\n                    >\r\n                        Freepik\r\n                    </a>{\" \"}\r\n                    from{\" \"}\r\n                    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                        www.flaticon.com\r\n                    </a>\r\n                </List.Item>\r\n                <List.Item>\r\n                    <List.Header style={{ padding: \"1em 0\" }}>\r\n                        <Icon name=\"copyright\" /> Margiris Burakauskas, IFF-6/10\r\n                    </List.Header>\r\n                    <List.Content>2019</List.Content>\r\n                </List.Item>\r\n            </List>\r\n        </Container>\r\n    </Segment>\r\n);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport TopMenu from \"./components/TopMenu\";\r\nimport PostList from \"./components/PostList\";\r\nimport PostWithComments from \"./components/PostWithComments\";\r\nimport UserList from \"./components/UserList\";\r\nimport { Footer } from \"./components/Footer\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Route path=\"/\" component={TopMenu} />\r\n                <Route exact path=\"/\" component={PostList} />\r\n                <Route path=\"/post/:post_id\" component={PostWithComments} />\r\n                <Route path=\"/user/:name\" component={UserList} />\r\n            </BrowserRouter>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}